<?xml version="1.0" encoding="UTF-8"?>
<!--
 ~ The MIT License
 ~
 ~ Copyright (c) 2016, CloudBees, Inc.
 ~
 ~ Permission is hereby granted, free of charge, to any person obtaining a copy
 ~ of this software and associated documentation files (the "Software"), to deal
 ~ in the Software without restriction, including without limitation the rights
 ~ to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
 ~ copies of the Software, and to permit persons to whom the Software is
 ~ furnished to do so, subject to the following conditions:
 ~
 ~ The above copyright notice and this permission notice shall be included in
 ~ all copies or substantial portions of the Software.
 ~
 ~ THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 ~ IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 ~ FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
 ~ AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 ~ LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
 ~ OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
 ~ THE SOFTWARE.
 -->

<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <parent>
        <groupId>com.qlangtech.tis</groupId>
        <artifactId>tis-solr-parent</artifactId>
        <version>saturn-1.0.0-SNAPSHOT</version>
    </parent>

    <!--
      <groupId>org.jenkins-ci.plugins</groupId>
    -->
    <groupId>com.qlangtech.tis.tools</groupId>
    <artifactId>plugin</artifactId>

    <packaging>pom</packaging>

    <name>TIS Plugin Parent POM</name>
    <description>The TIS Plugins Parent POM Project</description>
    <inceptionYear>2020</inceptionYear>

    <scm>
        <!--reference to https://github.com/jenkinsci/plugin-pom-->
        <connection>scm:git:ssh://git@github.com:qlangtech/plugins.git</connection>
        <developerConnection>scm:git:ssh://git@github.com:qlangtech/plugins.git</developerConnection>
        <url>https://github.com/qlangtech/plugins</url>
        <tag>HEAD</tag>
    </scm>

    <properties>

        <hadoop-version>2.6.5</hadoop-version>
        <!--
                <hive-exec-fix.version>1.1.1-fix</hive-exec-fix.version>
            -->
        <hive.version>1.2.1</hive.version>

        <maven-tpi-plugin.classpathDependentExcludes>
            commons-logging:commons-logging,commons-lang:commons-lang,com.google.guava:guava,log4j:log4j,org.slf4j:*,ch.qos.logback:logback-classic
        </maven-tpi-plugin.classpathDependentExcludes>
        <maven-tpi-plugin.version>${project.version}</maven-tpi-plugin.version>
        <tis.version>${project.version}</tis.version>

        <project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>
        <project.build.outputEncoding>UTF-8</project.build.outputEncoding>
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
        <releaseProfiles></releaseProfiles>
        <arguments></arguments>
        <argLine>-Xms768M -Xmx768M -Djava.awt.headless=true -XX:+HeapDumpOnOutOfMemoryError -XX:+TieredCompilation
            -XX:TieredStopAtLevel=1
        </argLine>


        <stapler-plugin.version>1.17</stapler-plugin.version>
        <java.level>8</java.level>
        <!-- Change this property if you need your tests to be compiled with a different Java level than the plugin. -->
        <!-- Use only if strictly necessary. It may cause problems in your IDE. -->
        <java.level.test>${java.level}</java.level.test>

        <!-- Defines a SpotBugs threshold. Use "Low" to discover low-priority bugs.
             Hint: SpotBugs considers some real NPE risks in Jenkins as low-priority issues, it is recommended to enable it in plugins.
          -->
        <spotbugs.threshold>Medium</spotbugs.threshold>
        <!-- Defines a SpotBugs effort. Use "Max" to maximize the scan depth -->
        <spotbugs.effort>Default</spotbugs.effort>

        <!-- Whether to skip tests during release phase (they are executed in the prepare phase). -->
        <release.skipTests>true</release.skipTests>
        <!-- By default we do not create *-tests.jar. Set to false to allow other plugins to depend on test utilities in yours, using <classifier>tests</classifier>. -->
        <no-test-jar>true</no-test-jar>

        <node.version>4.0.0</node.version>
        <npm.version>2.13.1</npm.version>
        <yarn.version>0.23.0</yarn.version>
        <frontend-version>1.9.1</frontend-version>
        <skip.node.tests/> <!-- changed by -DskipTests, if specified - see profile -->
        <skip.node.lint/> <!-- changed by -DskipLint, if specified - see profile -->
        <npm.loglevel/> <!-- may use e.g. -\-silent (without backslash) -->

        <!-- To skip the wizard by default in hpi:run. It should not impact other goals. -->
        <hudson.Main.development>true</hudson.Main.development>

        <access-modifier.version>1.16</access-modifier.version>
        <!-- May be used to select timestamped snapshots: -->
        <access-modifier-annotation.version>${access-modifier.version}</access-modifier-annotation.version>
        <access-modifier-checker.version>${access-modifier.version}</access-modifier-checker.version>
        <animal.sniffer.version>1.18</animal.sniffer.version>
        <powermock.version>2.0.7</powermock.version>

        <!-- To opt in to @Restricted(Beta.class) APIs, set to true: -->
        <useBeta>false</useBeta>
        <incrementals.url>https://repo.jenkins-ci.org/incrementals/</incrementals.url>
        <scmTag>HEAD</scmTag>
        <!-- Where to put temporary files during test runs. -->
        <surefireTempDir>${project.build.directory}/tmp</surefireTempDir>
    </properties>

    <modules>
        <module>tis-spark-hive-server-extends</module>
        <module>tis-hdfs-plugin</module>
        <module>tis-asyncmsg-rocketmq-plugin</module>
        <module>tis-hive-flat-table-builder-plugin</module>
        <module>tis-k8s-plugin</module>
        <module>tis-aliyun-fs-plugin</module>
        <module>customer-plugin-test</module>

    </modules>

    <dependencyManagement>
        <dependencies>

            <dependency>
                <groupId>com.qlangtech.tis.tools</groupId>
                <artifactId>tis-spark-extends-api</artifactId>
                <version>${project.version}</version>
            </dependency>

            <dependency>
                <groupId>org.easymock</groupId>
                <artifactId>easymock</artifactId>
                <version>4.2</version>
                <scope>test</scope>
            </dependency>

            <dependency>
                <groupId>org.apache.hive</groupId>
                <artifactId>hive-jdbc</artifactId>
                <version>${hive.version}</version>
                <exclusions>
                    <exclusion>
                        <groupId>log4j</groupId>
                        <artifactId>apache-log4j-extras</artifactId>
                    </exclusion>
                    <exclusion>
                        <groupId>org.eclipse.jetty.aggregate</groupId>
                        <artifactId>jetty-all</artifactId>
                    </exclusion>
                    <exclusion>
                        <groupId>commons-logging</groupId>
                        <artifactId>commons-logging</artifactId>
                    </exclusion>
                    <exclusion>
                        <artifactId>
                            hadoop-yarn-server-resourcemanager
                        </artifactId>
                        <groupId>org.apache.hadoop</groupId>
                    </exclusion>
                </exclusions>
            </dependency>


            <dependency>
                <groupId>org.apache.hive</groupId>
                <artifactId>hive-exec</artifactId>
                <version>${hive.version}</version>
                <exclusions>
                    <exclusion>
                        <groupId>asm</groupId>
                        <artifactId>asm</artifactId>
                    </exclusion>
                    <exclusion>
                        <groupId>org.apache.hive</groupId>
                        <artifactId>hive-ant</artifactId>
                    </exclusion>
                    <exclusion>
                        <groupId>org.apache.hive</groupId>
                        <artifactId>hive-metastore</artifactId>
                    </exclusion>
                    <exclusion>
                        <groupId>org.apache.hive</groupId>
                        <artifactId>hive-shims</artifactId>
                    </exclusion>
                    <exclusion>
                        <groupId>org.apache.calcite</groupId>
                        <artifactId>calcite-core</artifactId>
                    </exclusion>

                    <exclusion>
                        <groupId>org.apache.calcite</groupId>
                        <artifactId>calcite-avatica</artifactId>
                    </exclusion>
                </exclusions>
            </dependency>

            <dependency>
                <groupId>com.qlangtech.tis</groupId>
                <artifactId>tis-sql-parser</artifactId>
                <version>${tis.version}</version>
                <scope>provided</scope>
            </dependency>

            <dependency>
                <groupId>com.qlangtech.tis</groupId>
                <artifactId>tis-builder-api</artifactId>
                <version>${tis.version}</version>
                <scope>provided</scope>
            </dependency>

            <dependency>
                <groupId>com.qlangtech.tis</groupId>
                <artifactId>tis-plugin</artifactId>
                <version>${tis.version}</version>
                <scope>provided</scope>
            </dependency>

            <dependency>
                <groupId>com.qlangtech.tis</groupId>
                <artifactId>tis-global-config</artifactId>
                <version>${tis.version}</version>
                <scope>provided</scope>
            </dependency>

            <dependency>
                <groupId>junit</groupId>
                <artifactId>junit</artifactId>
                <version>4.13</version>
            </dependency>
            <!-- JTN tidy this up? -->
            <dependency> <!-- used in JTH and jenkins core > 2.x -->
                <groupId>javax.servlet</groupId>
                <artifactId>javax.servlet-api</artifactId>
                <version>3.1.0</version>
            </dependency>
            <dependency>
                <groupId>org.codehaus.mojo</groupId>
                <artifactId>animal-sniffer-annotations</artifactId>
                <version>${animal.sniffer.version}</version>
            </dependency>
            <!--
            <dependency>
                <groupId>org.codehaus.mojo.signature</groupId>
                <artifactId>java18</artifactId>
                <version>1.0</version>
                <type>signature</type>
            </dependency>
            -->
            <dependency>
                <groupId>org.mockito</groupId>
                <artifactId>mockito-core</artifactId>
                <version>3.3.3</version>
            </dependency>
            <dependency>
                <groupId>org.powermock</groupId>
                <artifactId>powermock-module-junit4</artifactId>
                <version>${powermock.version}</version>
            </dependency>
            <dependency>
                <groupId>org.powermock</groupId>
                <artifactId>powermock-api-mockito2</artifactId>
                <version>${powermock.version}</version>
            </dependency>
            <dependency>
                <groupId>org.objenesis</groupId>
                <artifactId>objenesis</artifactId>
                <version>3.1</version>
            </dependency>

            <dependency>
                <groupId>org.apache.hadoop</groupId>
                <artifactId>hadoop-hdfs</artifactId>
                <version>${hadoop-version}</version>
            </dependency>

            <dependency>
                <groupId>org.apache.hadoop</groupId>
                <artifactId>hadoop-mapreduce-client-core</artifactId>
                <version>${hadoop-version}</version>
                <exclusions>
                    <exclusion>
                        <groupId>jdk.tools</groupId>
                        <artifactId>jdk.tools</artifactId>
                    </exclusion>
                    <exclusion>
                        <groupId>org.slf4j</groupId>
                        <artifactId>slf4j-log4j12</artifactId>
                    </exclusion>
                </exclusions>
            </dependency>
            <dependency>
                <groupId>org.apache.hadoop</groupId>
                <artifactId>hadoop-yarn-client</artifactId>
                <version>${hadoop-version}</version>
                <exclusions>
                    <exclusion>
                        <groupId>log4j</groupId>
                        <artifactId>log4j</artifactId>
                    </exclusion>
                </exclusions>
            </dependency>

            <dependency>
                <groupId>org.apache.hadoop</groupId>
                <artifactId>hadoop-core</artifactId>
                <version>${hadoop-version}</version>
            </dependency>

            <dependency>
                <groupId>org.apache.hadoop</groupId>
                <artifactId>hadoop-common</artifactId>
                <version>${hadoop-version}</version>
                <exclusions>
                    <exclusion>
                        <groupId>com.sun.jersey</groupId>
                        <artifactId>jersey-server</artifactId>
                    </exclusion>
                    <exclusion>
                        <groupId>javax.servlet</groupId>
                        <artifactId>servlet-api</artifactId>
                    </exclusion>
                    <exclusion>
                        <groupId>org.mortbay.jetty</groupId>
                        <artifactId>jetty</artifactId>
                    </exclusion>
                    <exclusion>
                        <groupId>org.mortbay.jetty</groupId>
                        <artifactId>jetty-util</artifactId>
                    </exclusion>
                    <exclusion>
                        <groupId>com.sun.jersey</groupId>
                        <artifactId>jersey-core</artifactId>
                    </exclusion>
                    <exclusion>
                        <groupId>com.sun.jersey</groupId>
                        <artifactId>jersey-json</artifactId>
                    </exclusion>
                    <exclusion>
                        <groupId>om.sun.jersey</groupId>
                        <artifactId>jersey-server</artifactId>
                    </exclusion>
                    <exclusion>
                        <groupId>tomcat</groupId>
                        <artifactId>jasper-compiler</artifactId>
                    </exclusion>
                    <exclusion>
                        <groupId>tomcat</groupId>
                        <artifactId>jasper-runtime</artifactId>
                    </exclusion>
                    <exclusion>
                        <groupId>javax.servlet.jsp</groupId>
                        <artifactId>jsp-api</artifactId>
                    </exclusion>
                    <exclusion>
                        <groupId>net.java.dev.jets3t</groupId>
                        <artifactId>jets3t</artifactId>
                    </exclusion>
                    <exclusion>
                        <groupId>org.slf4j</groupId>
                        <artifactId>slf4j-log4j12</artifactId>
                    </exclusion>
                    <exclusion>
                        <groupId>org.apache.curator</groupId>
                        <artifactId>curator-client</artifactId>
                    </exclusion>
                    <exclusion>
                        <groupId>org.apache.curator</groupId>
                        <artifactId>curator-recipes</artifactId>
                    </exclusion>
                </exclusions>
            </dependency>

            <dependency>
                <groupId>org.apache.hadoop</groupId>
                <artifactId>hadoop-client</artifactId>
                <version>${hadoop-version}</version>
                <exclusions>
                    <exclusion>
                        <groupId>xerces</groupId>
                        <artifactId>xercesImpl</artifactId>
                    </exclusion>
                    <exclusion>
                        <groupId>org.apache.hadoop</groupId>
                        <artifactId>hadoop-mapreduce-client-core</artifactId>
                    </exclusion>
                    <exclusion>
                        <groupId>org.apache.commons</groupId>
                        <artifactId>commons-math3</artifactId>
                    </exclusion>

                    <exclusion>
                        <groupId>org.mortbay.jetty</groupId>
                        <artifactId>jsp-api-2.1</artifactId>
                    </exclusion>
                    <exclusion>
                        <groupId>org.mortbay.jetty</groupId>
                        <artifactId>jsp</artifactId>
                    </exclusion>
                    <exclusion>
                        <groupId>tomcat</groupId>
                        <artifactId>jasper-runtime</artifactId>
                    </exclusion>
                    <exclusion>
                        <groupId>tomcat</groupId>
                        <artifactId>jasper-compiler</artifactId>
                    </exclusion>
                    <exclusion>
                        <groupId>org.apache.hadoop</groupId>
                        <artifactId>hadoop-mapreduce-client-app</artifactId>
                    </exclusion>
                    <exclusion>
                        <groupId>org.apache.hadoop</groupId>
                        <artifactId>hadoop-mapreduce-client-jobclient</artifactId>
                    </exclusion>
                    <exclusion>
                        <groupId>org.apache.hadoop</groupId>
                        <artifactId>hadoop-yarn-server-nodemanager</artifactId>
                    </exclusion>
                </exclusions>
            </dependency>


        </dependencies>
    </dependencyManagement>

    <dependencies>

        <dependency>
            <groupId>com.qlangtech.tis</groupId>
            <artifactId>tis-builder-api</artifactId>
        </dependency>


        <dependency>
            <groupId>com.qlangtech.tis</groupId>
            <artifactId>tis-plugin</artifactId>
        </dependency>

        <dependency>
            <groupId>com.qlangtech.tis</groupId>
            <artifactId>tis-global-config</artifactId>
        </dependency>

        <!-- dependencies provided by virtue of running in Jenkins -->
        <dependency>
            <groupId>javax.servlet</groupId>
            <artifactId>javax.servlet-api</artifactId>
            <scope>provided</scope>
        </dependency>

        <!-- static analysis
        <dependency>
            <groupId>com.github.spotbugs</groupId>
            <artifactId>spotbugs-annotations</artifactId>
            <scope>provided</scope>
            <optional>true</optional>
        </dependency>
        <dependency>
            <groupId>net.jcip</groupId>
            <artifactId>jcip-annotations</artifactId>
            <scope>provided</scope>
            <optional>true</optional>
        </dependency>-->

        <!-- for JRE requirement check annotation -->
        <dependency>
            <groupId>org.codehaus.mojo</groupId>
            <artifactId>animal-sniffer-annotations</artifactId>
            <scope>provided</scope>
            <optional>true</optional><!-- no need to have this at runtime -->
        </dependency>

        <dependency>
            <groupId>junit</groupId>
            <artifactId>junit</artifactId>
            <scope>test</scope>
        </dependency>
    </dependencies>

    <build>
        <!--
          Since new versions need to overwrite old versions, it's better
          not to have version number in the .hpi file name.
        -->
        <finalName>${project.artifactId}</finalName>
        <pluginManagement>
            <plugins>
                <plugin>
                    <artifactId>maven-antrun-plugin</artifactId>
                    <version>1.8</version>
                </plugin>
                <plugin>
                    <artifactId>maven-clean-plugin</artifactId>
                    <version>3.1.0</version>
                </plugin>
                <plugin>
                    <artifactId>maven-compiler-plugin</artifactId>
                    <version>3.8.1</version>
                </plugin>
                <plugin>
                    <artifactId>maven-dependency-plugin</artifactId>
                    <version>3.1.2</version>
                </plugin>
                <plugin>
                    <artifactId>maven-jar-plugin</artifactId>
                    <version>3.2.0</version>
                </plugin>
                <plugin>
                    <artifactId>maven-resources-plugin</artifactId>
                    <version>3.1.0</version>
                </plugin>
                <plugin>
                    <artifactId>maven-surefire-plugin</artifactId>
                    <version>3.0.0-M4</version>
                </plugin>
                <plugin>
                    <artifactId>maven-failsafe-plugin</artifactId>
                    <version>3.0.0-M4</version>
                </plugin>
                <plugin>
                    <artifactId>maven-deploy-plugin</artifactId>
                    <version>2.8.2
                    </version> <!-- TODO >3.0.0-M1 when MDEPLOY-244 is fixed (likely to cause security release issues without) -->
                </plugin>
                <plugin>
                    <artifactId>maven-enforcer-plugin</artifactId>
                    <version>3.0.0-M3</version> <!-- TODO 3.0.0 when released -->
                </plugin>
                <plugin>
                    <artifactId>maven-install-plugin</artifactId>
                    <version>3.0.0-M1</version>
                </plugin>
                <plugin>
                    <artifactId>maven-javadoc-plugin</artifactId>
                    <version>3.2.0</version>
                    <configuration>
                        <source>${java.level}</source>
                        <quiet>true</quiet>
                        <links>
                            <link>https://javadoc.jenkins.io/</link>
                        </links>
                    </configuration>
                </plugin>
                <plugin>
                    <artifactId>maven-release-plugin</artifactId>
                    <version>2.5.3</version>
                </plugin>
                <plugin>
                    <artifactId>maven-site-plugin</artifactId>
                    <version>3.9.0</version>
                </plugin>
                <plugin>
                    <artifactId>maven-project-info-reports-plugin</artifactId>
                    <version>3.0.0</version>
                </plugin>
                <plugin>
                    <artifactId>maven-source-plugin</artifactId>
                    <version>3.2.1</version>
                </plugin>
                <plugin>
                    <artifactId>maven-war-plugin</artifactId>
                    <version>3.2.3</version>
                </plugin>
                <plugin>
                    <artifactId>maven-eclipse-plugin</artifactId>
                    <version>2.10</version>
                    <!--
                      Because Eclipse lacks JSR-269 support, put the output
                      to a different directory
                    -->
                    <configuration>
                        <buildOutputDirectory>target/eclipse-classes</buildOutputDirectory>
                        <additionalProjectnatures>
                            <!-- enable Groovy nature by default for DSLD support  -->
                            <projectnature>org.eclipse.jdt.groovy.core.groovyNature</projectnature>
                        </additionalProjectnatures>
                    </configuration>
                </plugin>
                <plugin>
                    <groupId>org.codehaus.gmavenplus</groupId>
                    <artifactId>gmavenplus-plugin</artifactId>
                    <version>1.9.0</version>
                </plugin>
                <plugin>
                    <groupId>org.codehaus.mojo</groupId>
                    <artifactId>build-helper-maven-plugin</artifactId>
                    <version>3.1.0</version>
                    <executions>
                        <execution>
                            <id>add-source</id>
                            <phase>generate-sources</phase>
                            <goals>
                                <goal>add-source</goal>
                            </goals>
                            <configuration>
                                <sources>
                                    <source>${project.build.directory}/generated-sources/localizer</source>
                                </sources>
                            </configuration>
                        </execution>
                    </executions>
                </plugin>
                <plugin>
                    <groupId>org.jacoco</groupId>
                    <artifactId>jacoco-maven-plugin</artifactId>
                    <version>0.8.5</version>
                </plugin>
                <plugin>
                    <groupId>org.kohsuke.stapler</groupId>
                    <artifactId>maven-stapler-plugin</artifactId>
                    <version>${stapler-plugin.version}</version>
                </plugin>
                <!--
                <plugin>
                    <groupId>org.jenkins-ci.tools</groupId>
                    <artifactId>maven-hpi-plugin</artifactId>
                    <version>${hpi-plugin.version}</version>
                </plugin>
                -->
                <plugin>
                    <groupId>org.codehaus.mojo</groupId>
                    <artifactId>animal-sniffer-maven-plugin</artifactId>
                    <version>${animal.sniffer.version}</version>
                </plugin>
                <plugin>
                    <groupId>org.jvnet.localizer</groupId>
                    <artifactId>maven-localizer-plugin</artifactId>
                    <version>1.26</version>
                </plugin>
                <plugin>
                    <groupId>org.kohsuke</groupId>
                    <artifactId>access-modifier-checker</artifactId>
                    <version>${access-modifier-checker.version}</version>
                </plugin>
                <plugin>
                    <groupId>com.cloudbees</groupId>
                    <artifactId>maven-license-plugin</artifactId>
                    <version>1.8</version>
                </plugin>
                <plugin> <!-- not gated by Incrementals profiles, since we want the incrementalify goal to be available from the start -->
                    <groupId>io.jenkins.tools.incrementals</groupId>
                    <artifactId>incrementals-maven-plugin</artifactId>
                    <version>1.1</version>
                    <configuration>
                        <includes>
                            <include>org.jenkins-ci.*</include>
                            <include>io.jenkins.*</include>
                        </includes>
                        <generateBackupPoms>false</generateBackupPoms>
                        <updateNonincremental>false</updateNonincremental>
                    </configuration>
                </plugin>
                <plugin>
                    <groupId>com.github.spotbugs</groupId>
                    <artifactId>spotbugs-maven-plugin</artifactId>
                    <version>4.0.0</version>
                </plugin>
                <plugin>
                    <groupId>com.qlangtech.tis.tools</groupId>
                    <artifactId>maven-tpi-plugin</artifactId>
                    <version>${maven-tpi-plugin.version}</version>
                    <extensions>true</extensions>
                </plugin>
            </plugins>
        </pluginManagement>
        <plugins>
            <plugin>
                <artifactId>maven-jar-plugin</artifactId>
                <executions>
                    <execution>
                        <id>maybe-test-jar</id>
                        <goals>
                            <goal>test-jar</goal>
                        </goals>
                        <configuration>
                            <excludes>
                                <exclude>the.hpl</exclude>
                                <exclude>InjectedTest.class</exclude>
                                <exclude>test-dependencies/</exclude>
                            </excludes>
                            <skip>${no-test-jar}</skip>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <artifactId>maven-enforcer-plugin</artifactId>
                <executions>
                    <execution>
                        <id>display-info</id>
                        <phase>validate</phase>
                        <goals>
                            <goal>display-info</goal>
                            <goal>enforce</goal>
                        </goals>
                        <configuration>
                            <rules>


                                <requireMavenVersion>
                                    <version>[3.3.1,)</version>
                                    <message>3.3.1 required to at least look at .mvn/ if it exists.</message>
                                </requireMavenVersion>
                                <requireJavaVersion>
                                    <version>[1.8.0,)</version>
                                </requireJavaVersion>
                                <!-- TODO failing during incrementals deploy: MENFORCER-281
                                <requirePluginVersions>
                                  <banSnapshots>false</banSnapshots>
                                </requirePluginVersions>
                                -->
                                <enforceBytecodeVersion>
                                    <maxJdkVersion>1.${java.level}</maxJdkVersion>
                                    <ignoredScopes>
                                        <ignoredScope>test</ignoredScope>
                                    </ignoredScopes>
                                    <excludes>
                                        <!-- Makes no sense to check core itself: -->

                                        <exclude>om.qlangtech.tis:tis-plugin</exclude>
                                        <exclude>om.qlangtech.tis:tis-global-config</exclude>

                                        <!--
                                                            <exclude>org.jenkins-ci.main:jenkins-core</exclude>
                                                            <exclude>org.jenkins-ci.main:cli</exclude>
                                                            <exclude>org.jenkins-ci.main:jenkins-test-harness</exclude>
                                                            <exclude>org.jenkins-ci.main:remoting</exclude>
                                                            <exclude>org.kohsuke.stapler:stapler</exclude>
                                                            <exclude>org.kohsuke.stapler:stapler-groovy</exclude>
                                                            <exclude>org.kohsuke.stapler:stapler-jelly</exclude>
                                                            <exclude>org.kohsuke.stapler:stapler-jrebel</exclude>
                                                            <exclude>org.jenkins-ci:task-reactor</exclude>
                                        -->
                                        <!--  findbugs dep managed to provided and optional so is not shipped and missing annotations ok -->
                                        <exclude>com.google.code.findbugs:annotations</exclude>
                                        <exclude>com.github.spotbugs:spotbugs-annotations</exclude>
                                    </excludes>
                                    <!-- To add exclusions in a Jenkins plugin, use:
                                    <plugin>
                                        <artifactId>maven-enforcer-plugin</artifactId>
                                        <executions>
                                            <execution>
                                                <id>display-info</id>
                                                <configuration>
                                                    <rules>
                                                        <enforceBytecodeVersion>
                                                            <excludes combine.children="append">
                                                                <exclude>…</exclude>
                                                            </excludes>
                                                        </enforceBytecodeVersion>
                                                    </rules>
                                                </configuration>
                                            </execution>
                                        </executions>
                                    </plugin>
                                    (or just override java.level) -->
                                </enforceBytecodeVersion>
                                <bannedDependencies>
                                    <excludes>
                                        <exclude>javax.servlet:servlet-api</exclude>
                                        <exclude>org.sonatype.sisu:sisu-guice</exclude>
                                        <exclude>log4j:log4j:*:jar:compile</exclude>
                                        <exclude>log4j:log4j:*:jar:runtime</exclude>
                                        <exclude>commons-logging:commons-logging:*:jar:compile</exclude>
                                        <exclude>commons-logging:commons-logging:*:jar:runtime</exclude>
                                        <!-- Jenkins TestAll Harness is based on JUnit. Adding TestNG dependency would disable some of its functionality. -->
                                        <exclude>org.testng:testng</exclude>
                                    </excludes>

                                </bannedDependencies>
                                <requireUpperBoundDeps>
                                    <excludes>

                                        <exclude>commons-codec:commons-codec</exclude>
                                        <exclude>io.netty:netty</exclude>
                                        <exclude>com.google.guava:guava
                                        </exclude> <!-- TODO needed for Jenkins 2.71 and earlier -->
                                        <exclude>commons-logging:commons-logging</exclude> <!-- ditto -->
                                        <exclude>com.google.code.findbugs:jsr305</exclude> <!-- ditto -->
                                        <exclude>net.java.dev.jna:jna
                                        </exclude> <!-- needed for Jenkins 1.585 and earlier -->
                                    </excludes>
                                </requireUpperBoundDeps>
                            </rules>
                            <fail>false</fail>
                        </configuration>
                    </execution>
                    <execution>
                        <id>no-snapshots-in-release</id>
                        <phase>validate</phase>
                        <goals>
                            <goal>enforce</goal>
                        </goals>
                        <configuration>
                            <rules>
                                <!--
                                  this causes fails the incrementals IT to fail as the parent is a snapshot and the incremental is a release
                                  so this is a separate execution so that it can be skipped in that specific IT
                                  -->
                                <requireReleaseDeps>
                                    <message>No SNAPSHOT versions are allowed for releases</message>
                                    <onlyWhenRelease>true</onlyWhenRelease>
                                    <!--  whilst we generally want this this allows for easier testing of the plugin-pom in incrementals -->
                                    <failWhenParentIsSnapshot>false</failWhenParentIsSnapshot>
                                </requireReleaseDeps>
                            </rules>
                            <fail>false</fail>
                        </configuration>
                    </execution>
                </executions>
                <dependencies>
                    <dependency>
                        <groupId>org.codehaus.mojo</groupId>
                        <artifactId>extra-enforcer-rules</artifactId>
                        <version>1.2</version>
                    </dependency>
                </dependencies>
            </plugin>

            <!--
            <plugin>
                <groupId>com.github.spotbugs</groupId>
                <artifactId>spotbugs-maven-plugin</artifactId>
                <configuration>
                    <failOnError>${spotbugs.failOnError}</failOnError>
                </configuration>
                <executions>
                    <execution>
                        <id>spotbugs</id>
                        <goals>
                            <goal>check</goal>
                        </goals>
                        <phase>verify</phase>
                        <configuration>
                            <xmlOutput>true</xmlOutput>
                            <spotbugsXmlOutput>false</spotbugsXmlOutput>
                            <effort>${spotbugs.effort}</effort>
                            <threshold>${spotbugs.threshold}</threshold>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
-->
            <plugin>
                <artifactId>maven-compiler-plugin</artifactId>
                <configuration>
                    <source>1.${java.level}</source>
                    <target>1.${java.level}</target>
                    <testSource>1.${java.level.test}</testSource>
                    <testTarget>1.${java.level.test}</testTarget>
                </configuration>
            </plugin>
            <!--
            <plugin>
                <groupId>org.codehaus.mojo</groupId>
                <artifactId>animal-sniffer-maven-plugin</artifactId>
                <executions>
                    <execution>
                        <goals>
                            <goal>check</goal>
                        </goals>
                        <id>check</id>
                        <phase>test</phase>
                    </execution>
                </executions>
                <configuration>
                    <signature>
                        <groupId>org.codehaus.mojo.signature</groupId>
                        <artifactId>java1${java.level}</artifactId>
                    </signature>
                </configuration>
            </plugin>
            -->
            <plugin>
                <artifactId>maven-eclipse-plugin</artifactId>
            </plugin>
            <plugin>
                <groupId>com.qlangtech.tis.tools</groupId>
                <artifactId>maven-tpi-plugin</artifactId>
                <extensions>true</extensions>
                <configuration>
                    <pluginFirstClassLoader>true</pluginFirstClassLoader>
                    <minimumJavaVersion>1.${java.level}</minimumJavaVersion>
                    <classpathDependentExcludes>${maven-tpi-plugin.classpathDependentExcludes}
                    </classpathDependentExcludes>
                </configuration>
            </plugin>

            <plugin>
                <artifactId>maven-release-plugin</artifactId>
                <configuration>
                    <mavenExecutorId>forked-path</mavenExecutorId>
                    <useReleaseProfile>false</useReleaseProfile>
                    <preparationGoals>clean install</preparationGoals>
                    <goals>deploy</goals>
                    <arguments>${arguments}</arguments>
                    <releaseProfiles>jenkins-release,${releaseProfiles}</releaseProfiles>
                </configuration>
            </plugin>
            <plugin>
                <groupId>org.jvnet.localizer</groupId>
                <artifactId>maven-localizer-plugin</artifactId>
                <executions>
                    <execution>
                        <goals>
                            <goal>generate</goal>
                        </goals>
                        <configuration>
                            <fileMask>Messages.properties</fileMask>
                            <outputDirectory>target/generated-sources/localizer</outputDirectory>
                            <accessModifierAnnotations>true</accessModifierAnnotations>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
            <!--
            <plugin>
                <groupId>org.kohsuke</groupId>
                <artifactId>access-modifier-checker</artifactId>
                <configuration>
                    <properties>
                        <property>
                            <name>useBeta</name>
                            <value>${useBeta}</value>
                        </property>
                    </properties>
                </configuration>
            </plugin>
            -->
            <plugin>
                <groupId>org.codehaus.gmavenplus</groupId>
                <artifactId>gmavenplus-plugin</artifactId>
                <executions>
                    <execution>
                        <id>test-in-groovy</id>
                        <goals>
                            <goal>addTestSources</goal>
                            <goal>generateTestStubs</goal>
                            <goal>compileTests</goal>
                        </goals>
                    </execution>
                </executions>
                <configuration>
                    <!-- gmavenplus generates into generated-sources/test by default. gmaven generated into this directory. -->
                    <testStubsOutputDirectory>${project.build.directory}/generated-test-sources/groovy-stubs
                    </testStubsOutputDirectory>
                </configuration>

            </plugin>
            <plugin> <!-- https://stackoverflow.com/a/4086207/12916 -->
                <artifactId>maven-antrun-plugin</artifactId>
                <executions>
                    <execution>
                        <id>createTempDir</id>
                        <phase>generate-test-resources</phase>
                        <configuration>
                            <target>
                                <mkdir dir="${surefireTempDir}"/>
                            </target>
                        </configuration>
                        <goals>
                            <goal>run</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <artifactId>maven-surefire-plugin</artifactId>
                <configuration>
                    <!-- SUREFIRE-1226 workaround -->
                    <trimStackTrace>false</trimStackTrace>
                    <systemProperties>
                        <property>
                            <name>hudson.udp</name>
                            <value>-1</value>
                        </property>
                        <property>
                            <name>java.io.tmpdir</name>
                            <value>${surefireTempDir}</value>
                        </property>
                    </systemProperties>
                    <runOrder>alphabetical</runOrder>
                </configuration>
            </plugin>

            <plugin>
                <groupId>com.cloudbees</groupId>
                <artifactId>maven-license-plugin</artifactId>
                <executions>
                    <execution>
                        <goals>
                            <goal>process</goal>
                        </goals>
                        <phase>prepare-package</phase>
                        <configuration>
                            <!--requireCompleteLicenseInfo>true</requireCompleteLicenseInfo-->
                            <generateLicenseXml>target/${project.artifactId}/WEB-INF/licenses.xml</generateLicenseXml>
                            <inlineScript><![CDATA[
                filter {
                    def plugins = [] as Set
                    
                    // collect all Jenkins plugins
                    models.entrySet().each { e ->
                        if (e.value.packaging=="hpi")
                            plugins.add(e.key.id)
                    }
                    
                    // filter out dependencies that don't belong to this plugin
                    models.entrySet().removeAll(models.entrySet().findAll { e ->
                        def a = e.key;
                        
                        if (a.dependencyTrail.size()>0 && plugins.contains(a.dependencyTrail[1]))
                            return true; // ignore transitive dependencies through other plugins

                        // if the dependency goes through jenkins core, we don't need to bundle it in the war
                        // because jenkins-core comes in the <provided> scope, I think this is a bug in Maven that it puts such
                        // dependencies into the artifact list.
                        if (a.dependencyTrail.find { trail -> trail.contains(":hudson-core:") || trail.contains(":jenkins-core:") })
                            return true;
                            
                        return false;
                    })
                }              
              ]]></inlineScript>
                        </configuration>
                    </execution>
                </executions>
            </plugin>

            <!--  the following 2 plugins are for integration tests of plugin-pom only -->
            <!--
             <plugin>
                 <groupId>org.codehaus.mojo</groupId>
                 <artifactId>mrm-maven-plugin</artifactId>
                 <version>1.2.0</version>
                 <inherited>false</inherited>
                 <executions>
                     <execution>
                         <goals>
                             <goal>start</goal>
                             <goal>stop</goal>
                         </goals>
                         <configuration>
                             <propertyName>repository.proxy.url</propertyName>
                             <repositories>
                                 <proxyRepo/>
                             </repositories>
                         </configuration>
                     </execution>
                 </executions>
             </plugin>
             -->
            <!--
              <plugin>
                  <artifactId>maven-invoker-plugin</artifactId>
                  <version>3.2.1</version>
                  <inherited>false</inherited>
                  <executions>
                      <execution>
                          <id>integration-test</id>
                          <goals>
                              <goal>install</goal>
                              <goal>run</goal>
                          </goals>
                          <configuration>
                              <streamLogs>true</streamLogs>
                              <showErrors>true</showErrors>
                              <cloneProjectsTo>${project.build.directory}/its</cloneProjectsTo>
                              <localRepositoryPath>${basedir}/target/local-repo</localRepositoryPath>
                              <settingsFile>src/it/settings.xml</settingsFile>
                              <filterProperties>
                                  <repository.proxy.url>${repository.proxy.url}</repository.proxy.url>
                              </filterProperties>
                          </configuration>
                      </execution>
                  </executions>
              </plugin>
              -->
        </plugins>
    </build>

    <!--
    <repositories>
        <repository>
            <id>repo.jenkins-ci.org</id>
            <url>https://repo.jenkins-ci.org/public/</url>
        </repository>
    </repositories>

    <pluginRepositories>
        <pluginRepository>
            <id>repo.jenkins-ci.org</id>
            <url>https://repo.jenkins-ci.org/public/</url>
        </pluginRepository>
    </pluginRepositories>

    <distributionManagement>
        <repository>
            <uniqueVersion>false</uniqueVersion>
            <id>maven.jenkins-ci.org</id>
            <url>https://repo.jenkins-ci.org/releases/</url>
        </repository>
        <snapshotRepository>
            <id>maven.jenkins-ci.org</id>
            <url>https://repo.jenkins-ci.org/snapshots/</url>
        </snapshotRepository>
    </distributionManagement>
-->
</project>
