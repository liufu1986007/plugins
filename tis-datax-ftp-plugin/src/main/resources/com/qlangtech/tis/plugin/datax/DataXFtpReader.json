{
  "protocol": {
    "help": "描述：ftp服务器协议，目前支持传输协议有ftp和sftp。 ",
    "enum": [
      {
        "val": "ftp",
        "label": "FTP"
      },
      {
        "val": "sftp",
        "label": "SFTP"
      }
    ]
  },
  "host": {
    "help": "描述：ftp服务器地址。 ",
    "placeholder": "127.0.0.1"
  },
  "port": {
    "help": "描述：ftp服务器端口。 ",
    "placeholder": "22"
  },
  "timeout": {
    "dftVal": 60000,
    "help": "描述：连接ftp服务器连接超时时间，单位毫秒。 "
  },
  "connectPattern": {
    "help": "描述：连接模式（主动模式或者被动模式）。该参数只在传输协议是标准ftp协议时使用，值只能为：PORT (主动)，PASV（被动）。两种模式主要的不同是数据连接建立的不同。对于Port模式，是客户端在本地打开一个端口等服务器去连接建立数据连接，而Pasv模式就是服务器打开一个端口等待客户端去建立一个数据连接。",
    "dftVal": "PASV",
    "enum": [
      {
        "val": "PORT",
        "label": "主动"
      },
      {
        "val": "PASV",
        "label": "被动"
      }
    ]
  },
  "username": {
    "help": "描述：ftp服务器访问用户名。 "
  },
  "password": {
    "help": "描述：ftp服务器访问密码。 "
  },
  "path": {
    "help": "远程FTP文件系统的路径信息，注意这里可以支持填写多个路径。\n\n当指定单个远程FTP文件，FtpReader暂时只能使用单线程进行数据抽取。二期考虑在非压缩文件情况下针对单个File可以进行多线程并发读取。\n\n当指定多个远程FTP文件，FtpReader支持使用多线程进行数据抽取。线程并发数通过通道数指定。\n\n当指定通配符，FtpReader尝试遍历出多个文件信息。例如: 指定/*代表读取/目录下所有的文件，指定/bazhen/*代表读取bazhen目录下游所有的文件。FtpReader目前只支持*作为文件通配符。\n\n特别需要注意的是，DataX会将一个作业下同步的所有Text File视作同一张数据表。用户必须自己保证所有的File能够适配同一套schema信息。读取文件用户必须保证为类CSV格式，并且提供给DataX权限可读。\n\n特别需要注意的是，如果Path指定的路径下没有符合匹配的文件抽取，DataX将报错 "
  },
  "column": {
    "help": "描述：读取字段列表，type指定源数据的类型，index指定当前列来自于文本第几列(以0开始)，value指定当前类型为常量，不从源头文件读取数据，而是根据value值自动生成对应的列。 "
  },
  "fieldDelimiter": {
    "help": "描述：读取的字段分隔符，可以用'\\t','\\001'等字符 "
  },
  "compress": {
    "help": "描述：文本压缩类型，默认不填写意味着没有压缩。支持压缩类型为zip、gzip、bzip2。 "
  },
  "encoding": {
    "help": "描述：读取文件的编码配置。"
  },
  "skipHeader": {
    "help": "描述：类CSV格式文件可能存在表头为标题情况，需要跳过。默认不跳过。"
  },
  "nullFormat": {
    "help": "描述：文本文件中无法使用标准字符串定义null(空指针)，DataX提供nullFormat定义哪些字符串可以表示为null。"
  },
  "maxTraversalLevel": {
    "help": "描述：允许遍历文件夹的最大层数。"
  },
  "csvReaderConfig": {
    "help": "描述：读取CSV类型文件参数配置，Map类型。读取CSV类型文件使用的CsvReader进行读取，会有很多配置，不配置则使用默认值。"
  },
  "template": {
    "label": "配置模版",
    "dftVal": "com.qlangtech.tis.plugin.datax.DataXFtpReader.getDftTemplate()",
    "rows": 18
  }
}